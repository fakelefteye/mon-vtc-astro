---
// Pas de code serveur nécessaire.
---
<div class="booking-wrapper">
    <div class="form-container">
        <h2 class="form-title">Réserver Votre Chauffeur</h2>
        <p class="form-subtitle">Obtenez une estimation et réservez votre trajet en quelques clics.</p>

        <form id="quote-form" class="form-grid">
            <div class="form-group full-width"><h3 class="step-title">1. Vos Coordonnées</h3></div>
            <div class="form-group">
                <label for="name">Nom & Prénom</label>
                <input type="text" id="name" name="name" required placeholder="Ex: Marie Dupont">
            </div>
            <div class="form-group">
                <label for="phone">Téléphone</label>
                <input type="tel" id="phone" name="phone" required>
            </div>
            <div class="form-group full-width">
                <label for="email">Adresse E-mail</label>
                <input type="email" id="email" name="email" required placeholder="Pour le bon de réservation et la facture">
            </div>

            <div class="form-group full-width"><h3 class="step-title">2. Votre Trajet</h3></div>
            <div class="form-group">
                <label for="pickup">Adresse de départ</label>
                <gmp-place-autocomplete for="pickup" country="fr">
                    <input type="text" id="pickup" name="pickup" required placeholder="Saisissez une adresse...">
                </gmp-place-autocomplete>
            </div>
            <div class="form-group">
                <label for="dropoff">Adresse de destination</label>
                <gmp-place-autocomplete for="dropoff" country="fr">
                    <input type="text" id="dropoff" name="dropoff" required placeholder="Saisissez une adresse...">
                </gmp-place-autocomplete>
            </div>
            <div class="form-group">
                <label for="booking-time">Date et heure</label>
                <input type="datetime-local" id="booking-time" name="bookingTime" required>
            </div>
            <div class="form-group">
                <label for="passengers">Passagers</label>
                <input type="number" id="passengers" name="passengers" required min="1" max="4" value="1">
            </div>

            <div class="form-group full-width"><h3 class="step-title">3. Options</h3></div>
            <div class="form-group full-width">
                 <label class="checkbox-label">
                    <input type="checkbox" id="is-professional-checkbox">
                    <span>Je suis un professionnel (pour la facturation)</span>
                </label>
            </div>
            <div id="professional-fields" class="professional-fields-hidden full-width">
                <div class="form-group">
                    <label for="company-name">Raison sociale</label>
                    <input type="text" id="company-name" name="companyName" placeholder="Nom de votre entreprise">
                </div>
                <div class="form-group">
                    <label for="company-siret">N° SIRET</label>
                    <input type="text" id="company-siret" name="companySiret" placeholder="14 chiffres">
                </div>
                 <div class="form-group full-width">
                    <label for="company-vat">N° TVA Intracommunautaire (si applicable)</label>
                    <input type="text" id="company-vat" name="companyVat" placeholder="Ex: FR12345678901">
                </div>
            </div>

            <div class="form-group full-width">
                <button type="submit" id="estimate-btn" class="submit-button">Estimer le Prix</button>
            </div>
        </form>
    
        <div id="quote-result" class="quote-result-hidden">
            <div id="quote-details"></div>
            <h3 class="payment-title">Confirmez votre réservation</h3>
            <div class="payment-buttons">
                <button type="button" id="pay-online-btn" class="submit-button cta">💳 Payer en ligne</button>
                <button type="button" id="book-onboard-btn" class="secondary-button">🚗 Réserver et Payer à bord</button>
            </div>
            <p id="form-status" class="status-message"></p>
        </div>
    </div>
</div>

<style>
    :root { 
        --accent-color: #c5a47e; 
        --dark-color: #1a1a1a;
        --cta-bg: linear-gradient(45deg, var(--accent-color), #b19472);
        --cta-hover: linear-gradient(45deg, #b19472, #a08365);
    }
    .booking-wrapper { background: white; padding: 2.5rem; border-radius: 16px; box-shadow: 0 15px 40px rgba(0,0,0,0.1); max-width: 800px; margin: 3rem auto; font-family: 'Montserrat', sans-serif; }
    .form-title { font-size: 2.2em; text-align: center; color: var(--dark-color); }
    .form-subtitle { text-align: center; color: #666; margin: 0.5rem 0 2.5rem 0; }
    .form-grid { display: grid; grid-template-columns: 1fr 1fr; gap: 1.5rem 2rem; }
    .form-group { display: flex; flex-direction: column; }
    .full-width { grid-column: 1 / -1; }
    .step-title { font-size: 1.2em; color: var(--dark-color); border-bottom: 2px solid var(--accent-color); padding-bottom: 0.5rem; margin: 1rem 0; }
    label { margin-bottom: 0.5rem; font-weight: 600; color: #555; }
    input, textarea { background-color: #fff !important; color: #333 !important; padding: 0.9rem; font-size: 1rem; border-radius: 8px; border: 1px solid #ddd; }
    input:focus { outline: none; border-color: var(--accent-color); box-shadow: 0 0 0 3px rgba(197, 164, 126, 0.3); }

    .checkbox-label { flex-direction: row; align-items: center; cursor: pointer; user-select: none; }
    .checkbox-label input { margin-right: 10px; width: 1.2em; height: 1.2em; accent-color: var(--accent-color); }

    .professional-fields-hidden { max-height: 0; opacity: 0; overflow: hidden; transition: all 0.5s ease-in-out; margin-top: 0 !important; padding-top: 0 !important; border: none !important; }
    .professional-fields-visible { max-height: 500px; opacity: 1; display: grid; grid-template-columns: 1fr 1fr; gap: 1.5rem 2rem; border-top: 1px solid #eee; margin-top: 1.5rem !important; padding-top: 1.5rem !important; }

    .submit-button { padding: 1rem; font-size: 1.1em; font-weight: bold; color: white; background: var(--dark-color); border: none; border-radius: 8px; cursor: pointer; transition: all 0.3s ease; }
    .submit-button:hover { transform: translateY(-2px); box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2); }
    .submit-button.cta { background: var(--cta-bg); }
    .submit-button.cta:hover { background: var(--cta-hover); }

    .secondary-button { padding: 1rem; font-size: 1.1em; font-weight: bold; color: var(--dark-color); background: #f1f3f5; border: 2px solid #dee2e6; border-radius: 8px; cursor: pointer; transition: all 0.3s ease; }
    .secondary-button:hover { background: #e9ecef; transform: translateY(-2px); }

    .quote-result-hidden { display: none; }
    .quote-result-visible { display: block; margin-top: 2.5rem; padding-top: 1.5rem; border-top: 1px solid #eee; text-align: center; }
    #quote-details .price { font-size: 1.8em; font-weight: bold; color: var(--accent-color); margin-top: 1rem; }
    .payment-title { font-size: 1.2em; margin: 2rem 0 1rem 0; }
    .payment-buttons { display: flex; flex-direction: column; gap: 1rem; }
    .status-message { text-align: center; font-weight: 500; min-height: 24px; margin-top: 1.5rem; }
    .error { color: #d9534f; }

    @media (max-width: 768px) { .form-grid, .professional-fields-visible { grid-template-columns: 1fr; } }
</style>

<script>
    import type { Stripe } from '@stripe/stripe-js';

    document.addEventListener('DOMContentLoaded', () => {
        let bookingData = {};
        let stripe: Stripe | null = null;

        const quoteForm = document.getElementById('quote-form') as HTMLFormElement;
        const professionalCheckbox = document.getElementById('is-professional-checkbox') as HTMLInputElement;
        const professionalFields = document.getElementById('professional-fields') as HTMLDivElement;
        const quoteResultEl = document.getElementById('quote-result') as HTMLDivElement;
        const quoteDetailsEl = document.getElementById('quote-details') as HTMLDivElement;
        const payOnlineBtn = document.getElementById('pay-online-btn') as HTMLButtonElement;
        const bookOnboardBtn = document.getElementById('book-onboard-btn') as HTMLButtonElement;
        const statusEl = document.getElementById('form-status') as HTMLParagraphElement;
        
        // --- INITIALISATION DE STRIPE ---
        const stripePublishableKey = import.meta.env.PUBLIC_STRIPE_KEY;
        window.addEventListener('stripe-loaded', () => {
            if (window.Stripe && stripePublishableKey) {
                stripe = window.Stripe(stripePublishableKey);
                console.log("✅ Stripe est prêt !");
            } else {
                console.error("❌ La clé publique Stripe est manquante.");
            }
        });
        
        // --- ✅ LOGIQUE AUTOCOMPLÉTION RESTAURÉE ---
        function initAutocomplete() {
            if (!window.google) return;

            // Sélectionne les composants d'autocomplétion
            const pickupAutocomplete = document.querySelector('gmp-place-autocomplete[for="pickup"]');
            const dropoffAutocomplete = document.querySelector('gmp-place-autocomplete[for="dropoff"]');

            if (pickupAutocomplete && dropoffAutocomplete) {
                // Écoute l'événement 'gmp-placechange' pour chaque champ
                pickupAutocomplete.addEventListener('gmp-placechange', () => {
                    const place = (pickupAutocomplete as any).place;
                    console.log("Adresse de départ sélectionnée:", place.formattedAddress);
                });
                dropoffAutocomplete.addEventListener('gmp-placechange', () => {
                    const place = (dropoffAutocomplete as any).place;
                    console.log("Adresse d'arrivée sélectionnée:", place.formattedAddress);
                });
                console.log("✅ Autocomplétion Google initialisée.");
            }
        }
        
        // Lance l'initialisation de Google Maps
        if (window.google) initAutocomplete();
        else window.addEventListener('maps-loaded', initAutocomplete);


        // --- GESTION DES AUTRES ÉVÉNEMENTS ---
        professionalCheckbox.addEventListener('change', () => {
            professionalFields.className = professionalCheckbox.checked ? 'professional-fields-visible full-width' : 'professional-fields-hidden full-width';
        });
        
        quoteForm.addEventListener('submit', async (e) => {
            e.preventDefault();
            quoteDetailsEl.innerHTML = 'Calcul en cours...';
            quoteResultEl.className = 'quote-result-visible';
            statusEl.textContent = '';
            
            const data = Object.fromEntries(new FormData(quoteForm).entries());
            try {
                const response = await fetch('/api/quote', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ 
                        pickup: data.pickup, 
                        dropoff: data.dropoff,
                        bookingTime: data.bookingTime 
                    }),
                });
                const quote = await response.json();
                if (!response.ok) throw new Error(quote.message || "Erreur de calcul.");
                
                quoteDetailsEl.innerHTML = `<p class="price">Prix estimé : ${quote.price.toFixed(2)} €</p>`;
                bookingData = { ...data, ...quote };
            } catch(error) {
                quoteDetailsEl.innerHTML = `<p class="error">${error instanceof Error ? error.message : "Erreur inconnue"}</p>`;
            }
        });

        payOnlineBtn.addEventListener('click', async () => {
            if (!stripe) { 
                statusEl.textContent = "Le service de paiement n'est pas prêt. Veuillez rafraîchir la page.";
                return;
            }
            // ... reste de la logique de paiement Stripe
        });

        bookOnboardBtn.addEventListener('click', async () => {
            // ... reste de la logique de paiement à bord
        });
    });
</script>